/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JuanRMadrid
 */
public class Proyecto extends javax.swing.JFrame {

    /**
     * Creates new form Proyecto
     */
    public Proyecto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        datos = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        MacDestino = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        MacOrigen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        type = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        PS = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        PuertoDestino = new javax.swing.JTextField();
        PuertoFuente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        IPORIGEN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        IPDESTINO = new javax.swing.JTextField();
        convertir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        TTL = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Componentes de Trama hexadecimal");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel2.setText("Datos Hexadecimal");

        datos.setColumns(20);
        datos.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        datos.setRows(5);
        jScrollPane1.setViewportView(datos);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel1.setText("Mac Destino");

        MacDestino.setEditable(false);
        MacDestino.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        MacDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MacDestinoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel3.setText("Mac Origen");

        MacOrigen.setEditable(false);
        MacOrigen.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        MacOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MacOrigenActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel7.setText("Ethertype");

        type.setEditable(false);
        type.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel6.setText("Tiempo de Vida (TTL)");

        PS.setEditable(false);
        PS.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        PS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel9.setText("Puerto Destino");

        PuertoDestino.setEditable(false);
        PuertoDestino.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        PuertoDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PuertoDestinoActionPerformed(evt);
            }
        });

        PuertoFuente.setEditable(false);
        PuertoFuente.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        PuertoFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PuertoFuenteActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel4.setText("IP Origen");

        IPORIGEN.setEditable(false);
        IPORIGEN.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        IPORIGEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPORIGENActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel5.setText("IP Destino");

        IPDESTINO.setEditable(false);
        IPDESTINO.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        IPDESTINO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPDESTINOActionPerformed(evt);
            }
        });

        convertir.setBackground(new java.awt.Color(0, 153, 0));
        convertir.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        convertir.setText("Colocar los Datos ");
        convertir.setToolTipText("");
        convertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertirActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel10.setText("Puerto Fuente");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel8.setText("Protocolo de Segmento");

        TTL.setEditable(false);
        TTL.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        TTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TTLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(MacDestino)
                            .addComponent(MacOrigen)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(PuertoFuente, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)))
                                .addGap(40, 40, 40)
                                .addComponent(PuertoDestino))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(738, 738, 738)
                                .addComponent(convertir))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IPDESTINO)
                                    .addComponent(IPORIGEN)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PS, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(TTL)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MacDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MacOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PuertoFuente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PuertoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TTL, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PS, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IPORIGEN, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IPDESTINO, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(convertir)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertirActionPerformed
        //datos a usar----mayuscula
        String data=datos.getText().toUpperCase();
         datos.setText(data);
        // MAC ADDRESS
        MacDestino.setText(data.substring(0,17).replace(' ','-'));
        MacOrigen.setText(data.substring(18,35).replace(' ','-'));

        //EtherType
        String tipo = data.substring(36,41);
        switch(tipo)
        {
            case "08 00":
            type.setText("Protocolo IPv4");
            break;
            case "86 DD":
            type.setText("Protocolo IPv6");
            break;
            case "08 06":
            type.setText("Protocolo ARP");
            break;
            case "88 08":
            type.setText("Control de Flujo de Ethernet");
            break;
            case "88 47":
            type.setText("MPLS Unicast");
            break;
            case "88 48":
            type.setText("MPLS Multicast");
            break;
            case "22 F0":
            type.setText("AVTP");
            break;
            default:
            type.setText("Protocolo Desconocido");
            break;
        }
        //Protocolo de Segmento
        String ps = data.substring(69,71);
        switch(ps)
        {
            case "06":
            PS.setText("Protocolo TCP");
            break;
            case "11":
            PS.setText("Protocolo UDP");
            break;
            case "01":
            PS.setText("Protocolo ICMP");
            break;
            case "4B":
            PS.setText("Protocolo PVP");
            break;
            case "5C":
            PS.setText("Protocolo MTP");
            break;
            case "79":
            PS.setText("Protocolo SMP");
            break;
            case "64":
            PS.setText("Protocolo GMTP");
            break;
            case "04":
            PS.setText("Protocolo IP");
            break;
            case "29":
            PS.setText("Protocolo IPv6");
            break;
            default:
            PS.setText("Protocolo Desconocido");
            break;
        }
        //tiempo de vida
        String ttl = data.substring(66,68);
       ttl = ttl
       .replace("0","0 ").replace("1","1 ").replace("2","2 ").replace("3","3 ").replace("4","4 ").replace("5","5 ").replace("6","6 ").replace("7","7 ").replace("8","8 ").replace("9","9 ")
       .replace("A","10 ").replace("B","11 ").replace("C","12 ").replace("D","13 ").replace("E","14 ").replace("F","15 ");      
        
        String TV[]=ttl.split(" ");
        int TV0 = Integer.parseInt(TV[0])*16+Integer.parseInt(TV[1]);
        TTL.setText(String.valueOf(TV0));
        //Puertos
        String portO = data.substring(102,107);
        String porto = portO.replace(" ","")
       .replace("0","0 ").replace("1","1 ").replace("2","2 ").replace("3","3 ").replace("4","4 ").replace("5","5 ").replace("6","6 ").replace("7","7 ").replace("8","8 ").replace("9","9 ")
       .replace("A","10 ").replace("B","11 ").replace("C","12 ").replace("D","13 ").replace("E","14 ").replace("F","15 ");;
       
       String portoA[]=porto.split(" ");
       int PORIGEN = Integer.parseInt(portoA[0])*4096+Integer.parseInt(portoA[1])*256+Integer.parseInt(portoA[2])*16+Integer.parseInt(portoA[3]);
       String porigen = String.valueOf(PORIGEN);
        switch(portO)
        {
            case "00 14":
            PuertoFuente.setText("ftp-data: "+porigen);
            break;
            case "00 15":
            PuertoFuente.setText("FTP: "+porigen);
            break;
            case "00 16":
            PuertoFuente.setText("SSH: "+porigen);
            break;
            case "00 17":
            PuertoFuente.setText("TELNET: "+porigen);
            break;
            case "00 19":
            PuertoFuente.setText("SMTP: "+porigen);
            break;
            case "00 50":
            PuertoFuente.setText("HTTP: "+porigen);
            break;
            case "00 6E":
            PuertoFuente.setText("POP3: "+porigen);
            break;
            case "00 6D":
            PuertoFuente.setText("POP2: "+porigen);
            break;
            case "01 BB":
            PuertoFuente.setText("HTTPS: "+porigen);
            break;
            case "00 44":
            PuertoFuente.setText("BOOTPC: "+porigen);
            break;
            case "00 35":
            PuertoFuente.setText("DNS: "+porigen);
            break;
            default:
            PuertoFuente.setText("Desconocido: "+porigen);
            break;
        }
        String portD = data.substring(108,113);
        String portd = portD.replace(" ","")
       .replace("0","0 ").replace("1","1 ").replace("2","2 ").replace("3","3 ").replace("4","4 ").replace("5","5 ").replace("6","6 ").replace("7","7 ").replace("8","8 ").replace("9","9 ")
       .replace("A","10 ").replace("B","11 ").replace("C","12 ").replace("D","13 ").replace("E","14 ").replace("F","15 ");;
       
       String portdA[]=portd.split(" ");
       int PDESTINO = Integer.parseInt(portdA[0])*4096+Integer.parseInt(portdA[1])*256+Integer.parseInt(portdA[2])*16+Integer.parseInt(portdA[3]);
       String pdestino = String.valueOf(PDESTINO);
        switch(portD)
        {
            case "00 14":
            PuertoDestino.setText("ftp-data: "+pdestino);
            break;
            case "00 15":
            PuertoDestino.setText("FTP: "+pdestino);
            break;
            case "00 16":
            PuertoDestino.setText("SSH: "+pdestino);
            break;
            case "00 17":
            PuertoDestino.setText("TELNET: "+pdestino);
            break;
            case "00 19":
            PuertoDestino.setText("SMTP: "+pdestino);
            break;
            case "00 50":
            PuertoDestino.setText("HTTP: "+pdestino);
            break;
            case "00 6E":
            PuertoDestino.setText("POP3: "+pdestino);
            break;
            case "00 6D":
            PuertoDestino.setText("POP2: "+pdestino);
            break;
            case "01 BB":
            PuertoDestino.setText("HTTPS: "+pdestino);
            break;
            case "00 44":
            PuertoDestino.setText("BOOTPC: "+pdestino);
            break;
            case "00 35":
            PuertoDestino.setText("DNS: "+pdestino);
            break;
            default:
            PuertoDestino.setText("Desconocido: "+pdestino);
            break;
        }
        
        //IP's
       int Oi = 78,Of=89;
       int Di = 90,Df = 101;
       
       if(data.charAt(43)=='6')
       {Oi=Oi+6;Of=Of+6;Di=Di+6;Df=Df+6;}
      
       //Ip Origen
       String ipO = data.substring(Oi,Of);
       
       //----------PASOS----------
       //----------PASO 1----------
       //separo aun mas para dividirlos y sustituyo los valores
        ipO = ipO.replace(" ","  ")
      .replace("0","0 ").replace("1","1 ").replace("2","2 ").replace("3","3 ").replace("4","4 ").replace("5","5 ").replace("6","6 ").replace("7","7 ").replace("8","8 ").replace("9","9 ")
      .replace("A","10 ").replace("B","11 ").replace("C","12 ").replace("D","13 ").replace("E","14 ").replace("F","15 ");
       
        //Aqui los divido de 2 en 2 
        String IPO[]=ipO.split("   ");
        String h1[] = IPO[0].split(" ");
        String h2[] = IPO[1].split(" ");
        String h3[] = IPO[2].split(" ");
        String h4[] = IPO[3].split(" ");
        /* */
        //aqui aplicamos la formula y pasamos a entero
        int d1=0,d2=0,d3=0,d4=0;
        d1 = Integer.parseInt(h1[0])*16 + Integer.parseInt(h1[1]);
        d2 = Integer.parseInt(h2[0])*16 + Integer.parseInt(h2[1]);
        d3 = Integer.parseInt(h3[0])*16 + Integer.parseInt(h3[1]);
        d4 = Integer.parseInt(h4[0])*16 + Integer.parseInt(h4[1]);
        
        //aqui los pasamos otravez a string para imprimirlos mejor(OPCIONAL)
        String r1,r2,r3,r4;
        r1 = String.valueOf(d1);
        r2 = String.valueOf(d2);
        r3 = String.valueOf(d3);
        r4 = String.valueOf(d4);
       
        String iporigen = r1+"."+r2+"."+r3+"."+r4;
        IPORIGEN.setText(iporigen);
       
        
        //Ip Destino
       String ipD = data.substring(Di,Df);
        //aqui los separo aun mas para dividirlos y sustituyo los valores
        ipD = ipD.replace(" ","  ")
      .replace("0","0 ").replace("1","1 ").replace("2","2 ").replace("3","3 ").replace("4","4 ").replace("5","5 ").replace("6","6 ").replace("7","7 ").replace("8","8 ").replace("9","9 ")
      .replace("A","10 ").replace("B","11 ").replace("C","12 ").replace("D","13 ").replace("E","14 ").replace("F","15 ");
    
        //Aqui los divido de 2 en 2 
        String IPD[]=ipD.split("   ");
        String hD1[] = IPD[0].split(" ");
        String hD2[] = IPD[1].split(" ");
        String hD3[] = IPD[2].split(" ");
        String hD4[] = IPD[3].split(" ");
        /* */
        //aqui aplicacmos la formula y pasamos a entero
        int dD1=0,dD2=0,dD3=0,dD4=0;
        dD1 = Integer.parseInt(hD1[0])*16 + Integer.parseInt(hD1[1]);
        dD2 = Integer.parseInt(hD2[0])*16 + Integer.parseInt(hD2[1]);
        dD3 = Integer.parseInt(hD3[0])*16 + Integer.parseInt(hD3[1]);
        dD4 = Integer.parseInt(hD4[0])*16 + Integer.parseInt(hD4[1]);
        
        //aqui los pasamos otravez a string para imprimirlos mejor(OPCIONAL)
        String rD1,rD2,rD3,rD4;
        rD1 = String.valueOf(dD1);
        rD2 = String.valueOf(dD2);
        rD3 = String.valueOf(dD3);
        rD4 = String.valueOf(dD4);
       
        String ipdestino = rD1+"."+rD2+"."+rD3+"."+rD4;
        IPDESTINO.setText(ipdestino);
        
    }//GEN-LAST:event_convertirActionPerformed

    private void IPDESTINOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPDESTINOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPDESTINOActionPerformed

    private void IPORIGENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPORIGENActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPORIGENActionPerformed

    private void PuertoFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PuertoFuenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PuertoFuenteActionPerformed

    private void PuertoDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PuertoDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PuertoDestinoActionPerformed

    private void PSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PSActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed

    }//GEN-LAST:event_typeActionPerformed

    private void MacOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MacOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MacOrigenActionPerformed

    private void MacDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MacDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MacDestinoActionPerformed

    private void TTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TTLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TTLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proyecto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IPDESTINO;
    private javax.swing.JTextField IPORIGEN;
    private javax.swing.JTextField MacDestino;
    private javax.swing.JTextField MacOrigen;
    private javax.swing.JTextField PS;
    private javax.swing.JTextField PuertoDestino;
    private javax.swing.JTextField PuertoFuente;
    private javax.swing.JTextField TTL;
    private javax.swing.JButton convertir;
    private javax.swing.JTextArea datos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField type;
    // End of variables declaration//GEN-END:variables
}
